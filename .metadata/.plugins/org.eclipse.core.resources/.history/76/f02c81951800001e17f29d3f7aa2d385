package day26.com.ict.edu;

import java.awt.BorderLayout;
import java.awt.FileDialog;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.ScrollPaneConstants;

public class Ex06_File_open extends JFrame{
	JPanel jp;
	JTextField jtf;
	JTextArea jta;
	JScrollPane jsp;
	JButton jb;
	public Ex06_File_open() {
		super("저장하기");
		
		jp = new JPanel();
		jtf = new JTextField(15);
		jb = new JButton("SAVE");
		
		jp.add(new JLabel("파일 경로 : "));
		jp.add(jtf);
		jp.add(jb);
		
		jta = new JTextArea(10,30);
		jsp = new JScrollPane(jta,
				ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS,
				ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
		jta.setLineWrap(true);  //줄바꿈
		
		add(jp, BorderLayout.NORTH);
		add(jsp, BorderLayout.CENTER);
		
		setSize(500,500);
		setLocationRelativeTo(null);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setVisible(true);
		
		jb.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				f_save();
			}
			});
		jtf.addMouseListener(new MouseListener() {
			@Override
			public void mouseReleased(MouseEvent e) {
				FileDialog fd = new FileDialog((Frame) getParent(), "저장하기", FileDialog.SAVE);
				fd.setVisible(true);
				String msg = fd. getDirectory()+fd.
			}
		});
		private void f_save() {
			String pathname = jtf.getText().trim();
			if(pathname.length() > 0) {
				File file = new File(pathname);
				FileOutputStream fos = null;
				BufferedOutputStream bos = null;
				
				try {
					fos = new FileOutputStream(file);
					bos = new BufferedOutputStream(fos);
					
					String msg = jta.getText().trim();
					bos.write(msg.getBytes());
					bos.flush();

				} catch (Exception e2) {
				} finally {
					try {
						bos.close();
						fos.close();
					} catch (Exception e3) {
					}
				}
			}
		}
	public static void main(String[] args) {
		new Ex06_File_open();
	}
}
